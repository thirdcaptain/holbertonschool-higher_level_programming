>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(-2, 100)
98

>>> add_integer(2)
100

>>> add_integer(0.0001, 0.0001)
0

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() takes at least 1 argument (0 given)

>>> add_integer( , 5)
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> add_integer(0, 0)
0

>>> add_integer(-2)
96

>>> add_integer(1.8, 1.2)
2

>>> add_integer(100.3, -2)
98

>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("Holberton", 4)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(5, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(345L)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3.14J)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3, 3.14J)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(1, 2, 3)
Traceback (most recent call last):
TypeError: add_integer() takes at most 2 arguments (3 given)

>>> add_integer([1], 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3, [1])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer([], 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3, [])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer({"num": 1}, 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3, {"num": 1})
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer({}, 3)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(3, {})
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer((3, 5), 5)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(5, (3, 3))
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer((), 5)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(5, ())
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(3, 3.14J)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(-3, --3)
0

>>> add_integer(float('inf'), float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> import math
>>> add_integer(float('nan'), float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
